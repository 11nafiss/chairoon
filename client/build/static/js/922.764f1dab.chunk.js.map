{"version":3,"file":"static/js/922.764f1dab.chunk.js","mappings":"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","sources":["components/compAuth/FormPass.js","pages/auth/NewPassword.js"],"sourcesContent":["import { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport React, { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport { NewPassword } from \"../../redux/slices/auth\";\r\nimport FormProvider from \"../shared/hook-form/FormProvider\";\r\nimport { Alert, Button, IconButton, InputAdornment, Stack, Typography } from \"@mui/material\";\r\nimport { RHFTextField } from \"../shared/hook-form\";\r\nimport { Eye, EyeSlash } from \"@phosphor-icons/react\";\r\nimport * as Yup from \"yup\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst FormPass = () => {\r\n  const { isLoading } = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n  const [queryParameters] = useSearchParams();\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const VerifyCodeSchema = Yup.object().shape({\r\n    password: Yup.string()\r\n      .min(6, \"Password must be at least 6 characters\")\r\n      .required(\"Password is required\"),\r\n    passwordConfirm: Yup.string()\r\n      .required(\"Confirm password is required\")\r\n      .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\"),\r\n  });\r\n\r\n  const defaultValues = {\r\n    password: \"\",\r\n    passwordConfirm: \"\",\r\n  };\r\n\r\n  const methods = useForm({\r\n    mode: \"onChange\",\r\n    resolver: yupResolver(VerifyCodeSchema),\r\n    defaultValues,\r\n  });\r\n\r\n  const {\r\n    reset,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = methods;\r\n\r\n  const onSubmit = async (data) => {\r\n    try {\r\n      //   Send API Request\r\n      dispatch(NewPassword({ ...data, token: queryParameters.get(\"token\") }));\r\n      reset();\r\n      Swal.fire({\r\n        title: \"Good job!\",\r\n        text: \"Successfully change your password!\",\r\n        icon: \"success\"\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\r\n      {!!errors.afterSubmit && <Alert severity=\"error\">{errors.afterSubmit.message}</Alert>}\r\n      <Stack direction=\"row\" spacing={0.5}>\r\n        <Typography variant=\"body2\" color=\"#fff\">\r\n          {\"Input your new password\"}\r\n        </Typography>\r\n      </Stack>\r\n      <Stack spacing={2} sx={{ marginY: 2 }}>\r\n        <RHFTextField\r\n          name=\"password\"\r\n          label=\"Password\"\r\n          type={showPassword ? \"text\" : \"password\"}\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment position=\"end\">\r\n                <IconButton onClick={() => setShowPassword(!showPassword)} edge=\"end\">\r\n                  {showPassword ? <Eye /> : <EyeSlash />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n        <RHFTextField\r\n          name=\"passwordConfirm\"\r\n          label=\"Confirm New Password\"\r\n          type={showPassword ? \"text\" : \"password\"}\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment position=\"end\">\r\n                <IconButton onClick={() => setShowPassword(!showPassword)} edge=\"end\">\r\n                  {showPassword ? <Eye /> : <EyeSlash />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n      </Stack>\r\n      <Button\r\n        fullWidth\r\n        color=\"inherit\"\r\n        size=\"large\"\r\n        type=\"submit\"\r\n        variant=\"contained\"\r\n        loading={isLoading}\r\n        sx={{\r\n          bgcolor: \"#f7bd00\",\r\n          color: \"#252525\",\r\n          \"&:hover\": {\r\n            bgcolor: \"#CECECF\",\r\n            color: \"#252525\",\r\n          },\r\n        }}\r\n      >\r\n        {\"UPDATE\"}\r\n      </Button>\r\n    </FormProvider>\r\n  );\r\n};\r\n\r\nexport default FormPass;\r\n","import React from \"react\";\r\nimport { Box, Typography } from \"@mui/material\";\r\nimport { motion } from \"framer-motion\";\r\nimport FormPass from \"../../components/compAuth/FormPass\";\r\n\r\nconst PageNewPassword = () => {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        flexGrow: 1,\r\n        height: \"90dvh\",\r\n        width: \"100%\",\r\n        display: { xs: \"initial\", md: \"flex\" },\r\n      }}\r\n    >\r\n      <Box\r\n        sx={{\r\n          width: \"100%\",\r\n          mt: { xs: \"15%\", md: \"inherit\" },\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <motion.div\r\n          initial=\"hidden\"\r\n          whileInView=\"visible\"\r\n          viewport={{ once: true, amount: 0.5 }}\r\n          transition={{ delay: 0.2, duration: 0.5 }}\r\n          variants={{\r\n            hidden: { opacity: 0, y: 50 },\r\n            visible: { opacity: 1, y: 0 },\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              width: \"400px\",\r\n              padding: \"20px\",\r\n              backdropFilter: \"brightness(60%)\",\r\n              borderRadius: \"25px\",\r\n            }}\r\n          >\r\n            <Typography fontWeight=\"900\" variant=\"h4\" sx={{ mb: \"1.5rem\", color: \"#fff\" }}>\r\n              Write your new Password\r\n            </Typography>\r\n            <FormPass />\r\n          </Box>\r\n        </motion.div>\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default PageNewPassword"],"names":["FormPass","isLoading","useSelector","state","auth","dispatch","useDispatch","queryParameters","useSearchParams","showPassword","setShowPassword","useState","VerifyCodeSchema","Yup","shape","password","min","required","passwordConfirm","oneOf","methods","useForm","mode","resolver","yupResolver","defaultValues","reset","handleSubmit","formState","errors","_jsxs","FormProvider","onSubmit","async","NewPassword","data","token","get","Swal","title","text","icon","error","console","children","afterSubmit","_jsx","Alert","severity","message","Stack","direction","spacing","Typography","variant","color","sx","marginY","RHFTextField","name","label","type","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","edge","Eye","EyeSlash","Button","fullWidth","size","loading","bgcolor","PageNewPassword","Box","flexGrow","height","width","display","xs","md","mt","alignItems","justifyContent","motion","div","initial","whileInView","viewport","once","amount","transition","delay","duration","variants","hidden","opacity","y","visible","padding","backdropFilter","borderRadius","fontWeight","mb"],"sourceRoot":""}