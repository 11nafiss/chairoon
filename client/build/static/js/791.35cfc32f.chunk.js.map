{"version":3,"file":"static/js/791.35cfc32f.chunk.js","mappings":"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","sources":["components/shared/FieldText.js","components/shared/hook-form/FormProvider.js","components/shared/image-set/Image.js","components/shared/upload/preview/AvatarPreview.js","components/shared/upload/UploadAvatar.js","components/shared/hook-form/RHFUpload.js","components/shared/hook-form/RHFTextField.js","components/compAuth/FormReset.js","pages/auth/ResetPassword.js"],"sourcesContent":["import { TextField } from \"@mui/material\";\r\nimport { styled } from \"@mui/material/styles\";\r\n\r\nconst InputField = styled(TextField)(({ theme }) => ({\r\n  marginY: \"5px\",\r\n  \"& .MuiInputBase-root\": { backgroundColor: \"white\", fontSize: \"16px\", border: \"2px solid #858585\"},\r\n  \"& .MuiInputBase-input\": { margin: \"0px\" },\r\n  \"& .MuiFormLabel-root\": {\r\n    fontSize: \"14px\",\r\n    backgroundColor: \"white\",\r\n    color: \"black\",\r\n    padding: \"2px 10px\",\r\n    borderRadius: \"25px\",\r\n  },\r\n}));\r\n\r\nexport default InputField;\r\n","import PropTypes from 'prop-types';\n// form\nimport { FormProvider as Form } from 'react-hook-form';\n\n// ----------------------------------------------------------------------\n\nFormProvider.propTypes = {\n  children: PropTypes.node,\n  methods: PropTypes.object,\n  onSubmit: PropTypes.func,\n};\n\nexport default function FormProvider({ children, onSubmit, methods }) {\n  return (\n    <Form {...methods}>\n      <form onSubmit={onSubmit} style={{ height: \"100%\" }}>{children}</form>\n    </Form>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { forwardRef } from 'react';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n// @mui\nimport { Box } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nconst Image = forwardRef(\n  ({ disabledEffect = false, effect = 'blur', sx, ...other }, ref) => {\n    const content = (\n      <Box\n        component={LazyLoadImage}\n        wrapperClassName=\"wrapper\"\n        effect={disabledEffect ? undefined : effect}\n        placeholderSrc={disabledEffect ? '/assets/transparent.png' : '/assets/placeholder.svg'}\n        sx={{ width: 1, height: 1, objectFit: 'cover' }}\n        {...other}\n      />\n    );\n\n    return (\n      <Box\n        ref={ref}\n        component=\"span\"\n        sx={{\n          lineHeight: 1,\n          display: 'block',\n          overflow: 'hidden',\n          position: 'relative',\n          '& .wrapper': {\n            width: 1,\n            height: 1,\n            backgroundSize: 'cover !important',\n          },\n          ...sx,\n        }}\n      >\n        {content}\n      </Box>\n    );\n  }\n);\n\nImage.propTypes = {\n  sx: PropTypes.object,\n  effect: PropTypes.string,\n  disabledEffect: PropTypes.bool,\n};\n\nexport default Image;\n","import PropTypes from 'prop-types';\n//\nimport Image from '../../image-set';\n\n// ----------------------------------------------------------------------\n\nAvatarPreview.propTypes = {\n  file: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n};\n\nexport default function AvatarPreview({ file }) {\n  if (!file) {\n    return null;\n  }\n\n  const imgUrl = typeof file === 'string' ? file : file.preview;\n\n  return (\n    <Image\n      alt=\"avatar\"\n      src={imgUrl}\n      sx={{\n        zIndex: 8,\n        overflow: 'hidden',\n        borderRadius: '50%',\n        position: 'absolute',\n        width: `calc(100% - 16px)`,\n        height: `calc(100% - 16px)`,\n      }}\n    />\n  );\n}\n","import PropTypes from \"prop-types\";\nimport { useDropzone } from \"react-dropzone\";\n// @mui\nimport { Typography } from \"@mui/material\";\nimport { styled, alpha } from \"@mui/material/styles\";\n//\nimport AvatarPreview from \"./preview/AvatarPreview\";\nimport { Image } from \"@phosphor-icons/react\";\n\n// ----------------------------------------------------------------------\n\nconst StyledDropZone = styled(\"div\")(({ theme }) => ({\n  width: 144,\n  height: 144,\n  margin: \"auto\",\n  display: \"flex\",\n  cursor: \"pointer\",\n  overflow: \"hidden\",\n  borderRadius: \"50%\",\n  alignItems: \"center\",\n  position: \"relative\",\n  justifyContent: \"center\",\n  border: `1px dashed ${alpha(theme.palette.grey[500], 0.32)}`,\n}));\n\nconst StyledPlaceholder = styled(\"div\")(({ theme }) => ({\n  zIndex: 7,\n  display: \"flex\",\n  borderRadius: \"50%\",\n  position: \"absolute\",\n  alignItems: \"center\",\n  flexDirection: \"column\",\n  justifyContent: \"center\",\n  width: `calc(100% - 16px)`,\n  height: `calc(100% - 16px)`,\n  color: theme.palette.text.disabled,\n  backgroundColor: theme.palette.background.neutral,\n  transition: theme.transitions.create(\"opacity\", {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.shorter,\n  }),\n}));\n\n// ----------------------------------------------------------------------\n\nUploadAvatar.propTypes = {\n  sx: PropTypes.object,\n  error: PropTypes.bool,\n  disabled: PropTypes.bool,\n  helperText: PropTypes.node,\n  file: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n};\n\nexport default function UploadAvatar({\n  error,\n  file,\n  disabled,\n  helperText,\n  sx,\n  ...other\n}) {\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragReject,\n  } = useDropzone({\n    multiple: false,\n    disabled,\n    ...other,\n  });\n\n  const hasFile = !!file;\n\n  const isError = isDragReject || !!error;\n\n  return (\n    <>\n      <StyledDropZone\n        {...getRootProps()}\n        sx={{\n          ...(isDragActive && {\n            opacity: 0.72,\n          }),\n          ...(isError && {\n            borderColor: \"error.light\",\n            ...(hasFile && {\n              bgcolor: \"error.lighter\",\n            }),\n          }),\n          ...(disabled && {\n            opacity: 0.48,\n            pointerEvents: \"none\",\n          }),\n          ...(hasFile && {\n            \"&:hover\": {\n              \"& .placeholder\": {\n                opacity: 1,\n              },\n            },\n          }),\n          ...sx,\n        }}\n      >\n        <input {...getInputProps()} />\n\n        {hasFile && <AvatarPreview file={file} />}\n\n        <StyledPlaceholder\n          className=\"placeholder\"\n          sx={{\n            border: \"2px solid #858585\",\n            \"&:hover\": {\n              opacity: 0.72,\n            },\n            ...(hasFile && {\n              zIndex: 9,\n              opacity: 0,\n              color: \"common.white\",\n              bgcolor: (theme) => alpha(theme.palette.grey[900], 0.64),\n            }),\n            ...(isError && {\n              color: \"error.main\",\n              bgcolor: \"error.lighter\",\n            }),\n          }}\n        >\n          <Image />\n\n          <Typography variant=\"caption\">\n            {file ? \"Update photo\" : \"Upload photo\"}\n          </Typography>\n        </StyledPlaceholder>\n      </StyledDropZone>\n\n      {helperText && helperText}\n    </>\n  );\n}","import PropTypes from \"prop-types\";\n// form\nimport { useFormContext, Controller } from \"react-hook-form\";\n// @mui\nimport { FormHelperText } from \"@mui/material\";\n//\nimport { UploadAvatar } from \"../upload\";\n\n// ----------------------------------------------------------------------\n\nRHFUploadAvatar.propTypes = {\n  name: PropTypes.string,\n};\n\n// ----------------------------------------------------------------------\n\nexport function RHFUploadAvatar({ name, ...other }) {\n  const { control } = useFormContext();\n\n  return (\n    <Controller\n      name={name}\n      control={control}\n      render={({ field, fieldState: { error } }) => (\n        <div>\n          <UploadAvatar\n            name={name}\n            accept={{\n              \"image/*\": [],\n            }}\n            error={!!error}\n            file={field.value}\n            {...other}\n          />\n\n          {!!error && (\n            <FormHelperText error sx={{ px: 2, textAlign: \"center\" }}>\n              {error.message}\n            </FormHelperText>\n          )}\n        </div>\n      )}\n    />\n  );\n}\n","import PropTypes from \"prop-types\";\n// form\nimport { useFormContext, Controller } from \"react-hook-form\";\n// @mui\nimport FieldText from \"../FieldText\";\n\n// ----------------------------------------------------------------------\n\nRHFTextField.propTypes = {\n  name: PropTypes.string,\n  helperText: PropTypes.node,\n};\n\nexport default function RHFTextField({ name, helperText, ...other }) {\n  const { control } = useFormContext();\n\n  return (\n    <Controller\n      name={name}\n      control={control}\n      render={({ field, fieldState: { error } }) => (\n        <FieldText\n          {...field}\n          fullWidth\n          value={typeof field.value === \"number\" && field.value === 0 ? \"\" : field.value}\n          error={!!error}\n          helperText={error ? error?.message : helperText}\n          {...other}\n        />\n      )}\n    />\n  );\n}\n","import React from \"react\";\r\nimport FormProvider from \"../shared/hook-form/FormProvider\";\r\nimport { Alert, Button, Stack, Typography } from \"@mui/material\";\r\nimport { RHFTextField } from \"../shared/hook-form\";\r\nimport { ForgotPassword } from \"../../redux/slices/auth\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport * as Yup from \"yup\";\r\n\r\nconst FormReset = () => {\r\n  const { isLoading } = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n  const ResetPasswordSchema = Yup.object().shape({\r\n    email: Yup.string()\r\n      .required(\"Email is required\")\r\n      .email(\"Email must be a valid email address\"),\r\n  });\r\n\r\n  const methods = useForm({\r\n    resolver: yupResolver(ResetPasswordSchema),\r\n    defaultValues: { email: \"\" },\r\n  });\r\n\r\n  const {\r\n    reset,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = methods;\r\n\r\n  const onSubmit = async (data) => {\r\n    try {\r\n      //   Send API Request\r\n      dispatch(ForgotPassword(data));\r\n      reset();\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\r\n      {!!errors.afterSubmit && (\r\n        <Alert severity=\"error\">{errors.afterSubmit.message}</Alert>\r\n      )}\r\n      <Stack direction=\"row\" spacing={0.5}>\r\n        <Typography variant=\"body2\" color=\"#fff\">\r\n          {\"Input your Email Account\"}\r\n        </Typography>\r\n      </Stack>\r\n      <Stack spacing={2} sx={{ marginY: 2 }}>\r\n        <RHFTextField type=\"email\" name=\"email\" label=\"Email\" />\r\n      </Stack>\r\n      <Stack alignItems=\"center\" sx={{ mb: 2 }}>\r\n        <Typography\r\n          component=\"div\"\r\n          sx={{ color: \"#fff\", typography: \"caption\", textAlign: \"center\", fontSize: \"13px\" }}\r\n        >\r\n          Check your email from inbox or spam after you submit!\r\n        </Typography>\r\n      </Stack>\r\n      <Button\r\n        fullWidth\r\n        color=\"inherit\"\r\n        size=\"large\"\r\n        type=\"submit\"\r\n        variant=\"contained\"\r\n        loading={isLoading}\r\n        sx={{\r\n          bgcolor: \"#f7bd00\",\r\n          color: \"#252525\",\r\n          \"&:hover\": {\r\n            bgcolor: \"#CECECF\",\r\n            color: \"#252525\",\r\n          },\r\n        }}\r\n      >\r\n        {\"SUBMIT\"}\r\n      </Button>\r\n    </FormProvider>\r\n  );\r\n};\r\n\r\nexport default FormReset;\r\n","import React from \"react\";\r\nimport { Box, Typography } from \"@mui/material\";\r\nimport { motion } from \"framer-motion\";\r\nimport FormReset from \"../../components/compAuth/FormReset\";\r\n\r\nconst PageResetPassword = () => {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        flexGrow: 1,\r\n        height: \"90dvh\",\r\n        width: \"100%\",\r\n        display: { xs: \"initial\", md: \"flex\" },\r\n      }}\r\n    >\r\n      <Box\r\n        sx={{\r\n          width: \"100%\",\r\n          mt: { xs: \"15%\", md: \"inherit\" },\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <motion.div\r\n          initial=\"hidden\"\r\n          whileInView=\"visible\"\r\n          viewport={{ once: true, amount: 0.5 }}\r\n          transition={{ delay: 0.2, duration: 0.5 }}\r\n          variants={{\r\n            hidden: { opacity: 0, y: 50 },\r\n            visible: { opacity: 1, y: 0 },\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              width: \"400px\",\r\n              padding: \"20px\",\r\n              backdropFilter: \"brightness(60%)\",\r\n              borderRadius: \"25px\",\r\n            }}\r\n          >\r\n            <Typography fontWeight=\"900\" variant=\"h4\" sx={{ mb: \"1.5rem\", color: \"#fff\" }}>\r\n              Reset your Password?\r\n            </Typography>\r\n            <FormReset />\r\n          </Box>\r\n        </motion.div>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PageResetPassword;\r\n"],"names":["styled","TextField","_ref","theme","marginY","backgroundColor","fontSize","border","margin","color","padding","borderRadius","FormProvider","children","onSubmit","methods","_jsx","Form","style","height","forwardRef","ref","disabledEffect","effect","sx","other","content","Box","component","LazyLoadImage","wrapperClassName","undefined","placeholderSrc","width","objectFit","lineHeight","display","overflow","position","backgroundSize","AvatarPreview","file","imgUrl","preview","Image","alt","src","zIndex","StyledDropZone","cursor","alignItems","justifyContent","concat","alpha","palette","grey","StyledPlaceholder","_ref2","flexDirection","text","disabled","background","neutral","transition","transitions","create","easing","easeInOut","duration","shorter","UploadAvatar","_ref3","error","helperText","getRootProps","getInputProps","isDragActive","isDragReject","useDropzone","multiple","hasFile","isError","_jsxs","_Fragment","opacity","borderColor","bgcolor","pointerEvents","className","Typography","variant","RHFUploadAvatar","name","control","useFormContext","Controller","render","field","fieldState","accept","value","FormHelperText","px","textAlign","message","RHFTextField","FieldText","fullWidth","FormReset","isLoading","useSelector","state","auth","dispatch","useDispatch","ResetPasswordSchema","Yup","shape","email","required","useForm","resolver","yupResolver","defaultValues","reset","handleSubmit","formState","errors","async","ForgotPassword","data","console","afterSubmit","Alert","severity","Stack","direction","spacing","type","label","mb","typography","Button","size","loading","PageResetPassword","flexGrow","xs","md","mt","motion","div","initial","whileInView","viewport","once","amount","delay","variants","hidden","y","visible","backdropFilter","fontWeight"],"sourceRoot":""}