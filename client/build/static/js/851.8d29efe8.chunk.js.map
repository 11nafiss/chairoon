{"version":3,"file":"static/js/851.8d29efe8.chunk.js","mappings":"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","sources":["../node_modules/hey-listen/dist/hey-listen.es.js","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/animation/utils/easing.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/find-spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/index.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/decay.mjs","../node_modules/framer-motion/dist/es/animation/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/create-instant-animation.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/waapi/supports.mjs","../node_modules/framer-motion/dist/es/animation/index.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/inertia.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/use-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils.mjs","../node_modules/framer-motion/dist/es/events/use-pointer-event.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/gestures/utils/event-type.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/PanSession.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/use-pan-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/drag/use-drag.mjs","../node_modules/framer-motion/dist/es/gestures/use-hover-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/use-viewport.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/use-tap-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/use-focus-gesture.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/index.mjs","../node_modules/framer-motion/dist/es/motion/utils/make-renderless-component.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/animation/animate.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/store-id.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/handoff.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/render/utils/animation.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/render/utils/types.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs"],"sourcesContent":["var warning = function () { };\r\nvar invariant = function () { };\r\nif (process.env.NODE_ENV !== 'production') {\r\n    warning = function (check, message) {\r\n        if (!check && typeof console !== 'undefined') {\r\n            console.warn(message);\r\n        }\r\n    };\r\n    invariant = function (check, message) {\r\n        if (!check) {\r\n            throw new Error(message);\r\n        }\r\n    };\r\n}\n\nexport { invariant, warning };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst easeIn = (p) => p * p;\nconst easeOut = reverseEasing(easeIn);\nconst easeInOut = mirrorEasing(easeIn);\n\nexport { easeIn, easeInOut, easeOut };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from 'hey-listen';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","import { invariant } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, \"Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.\");\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from 'hey-listen';\nimport { cubicBezier } from '../../easing/cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../../easing/ease.mjs';\nimport { circIn, circInOut, circOut } from '../../easing/circ.mjs';\nimport { backIn, backInOut, backOut } from '../../easing/back.mjs';\nimport { anticipate } from '../../easing/anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { easingDefinitionToFunction, isEasingArray };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { isEasingArray, easingDefinitionToFunction } from '../utils/easing.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction defaultOffset(values) {\n    const numValues = values.length;\n    return values.map((_value, i) => i !== 0 ? i / (numValues - 1) : 0);\n}\nfunction convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\nfunction keyframes({ keyframes: keyframeValues, ease = easeInOut, times, duration = 300, }) {\n    keyframeValues = [...keyframeValues];\n    const origin = keyframes[0];\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframes.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    function createInterpolator() {\n        return interpolate(absoluteTimes, keyframeValues, {\n            ease: Array.isArray(easingFunctions)\n                ? easingFunctions\n                : defaultEasing(keyframeValues, easingFunctions),\n        });\n    }\n    let interpolator = createInterpolator();\n    return {\n        next: (t) => {\n            state.value = interpolator(t);\n            state.done = t >= duration;\n            return state;\n        },\n        flipTarget: () => {\n            keyframeValues.reverse();\n            interpolator = createInterpolator();\n        },\n    };\n}\n\nexport { convertOffsetToTimes, defaultEasing, defaultOffset, keyframes };\n","import { warning } from 'hey-listen';\nimport { clamp } from '../../utils/clamp.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, duration / 1000);\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = duration * 1000;\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { findSpring, calcAngularFreq } from './find-spring.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nconst velocitySampleDuration = 5;\n/**\n * This is based on the spring implementation of Wobble https://github.com/skevy/wobble\n */\nfunction spring({ keyframes, restSpeed = 2, restDelta = 0.01, ...options }) {\n    let origin = keyframes[0];\n    let target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    let resolveSpring = zero;\n    let initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    function createSpring() {\n        const initialDelta = target - origin;\n        const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n        /**\n         * If we're working within what looks like a 0-1 range, change the default restDelta\n         * to 0.01\n         */\n        if (restDelta === undefined) {\n            restDelta = Math.min(Math.abs(target - origin) / 100, 0.4);\n        }\n        if (dampingRatio < 1) {\n            const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n            // Underdamped spring\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (target -\n                    envelope *\n                        (((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) /\n                            angularFreq) *\n                            Math.sin(angularFreq * t) +\n                            initialDelta * Math.cos(angularFreq * t)));\n            };\n        }\n        else if (dampingRatio === 1) {\n            // Critically damped spring\n            resolveSpring = (t) => target -\n                Math.exp(-undampedAngularFreq * t) *\n                    (initialDelta +\n                        (initialVelocity + undampedAngularFreq * initialDelta) *\n                            t);\n        }\n        else {\n            // Overdamped spring\n            const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                // When performing sinh or cosh values can hit Infinity so we cap them here\n                const freqForT = Math.min(dampedAngularFreq * t, 300);\n                return (target -\n                    (envelope *\n                        ((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) *\n                            Math.sinh(freqForT) +\n                            dampedAngularFreq *\n                                initialDelta *\n                                Math.cosh(freqForT))) /\n                        dampedAngularFreq);\n            };\n        }\n    }\n    createSpring();\n    return {\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        const prevT = Math.max(0, t - velocitySampleDuration);\n                        currentVelocity = velocityPerSecond(current - resolveSpring(prevT), t - prevT);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        flipTarget: () => {\n            initialVelocity = -initialVelocity;\n            [origin, target] = [target, origin];\n            createSpring();\n        },\n    };\n}\nspring.needsInterpolation = (a, b) => typeof a === \"string\" || typeof b === \"string\";\nconst zero = (_t) => 0;\n\nexport { spring };\n","import { keyframes } from './keyframes.mjs';\nimport { spring } from './spring.mjs';\nimport { decay } from './decay.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\n\nconst types = {\n    decay,\n    keyframes: keyframes,\n    tween: keyframes,\n    spring,\n};\nfunction loopElapsed(elapsed, duration, delay = 0) {\n    return elapsed - duration - delay;\n}\nfunction reverseElapsed(elapsed, duration = 0, delay = 0, isForwardPlayback = true) {\n    return isForwardPlayback\n        ? loopElapsed(duration + -elapsed, duration, delay)\n        : duration - (elapsed - duration) + delay;\n}\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\nconst framesync = (update) => {\n    const passTimestamp = ({ delta }) => update(delta);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n    };\n};\nfunction animate({ duration, driver = framesync, elapsed = 0, repeat: repeatMax = 0, repeatType = \"loop\", repeatDelay = 0, keyframes, autoplay = true, onPlay, onStop, onComplete, onRepeat, onUpdate, type = \"keyframes\", ...options }) {\n    var _a, _b;\n    let driverControls;\n    let repeatCount = 0;\n    let computedDuration = duration;\n    let latest;\n    let isComplete = false;\n    let isForwardPlayback = true;\n    let interpolateFromNumber;\n    const animator = types[keyframes.length > 2 ? \"keyframes\" : type];\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    if ((_b = (_a = animator).needsInterpolation) === null || _b === void 0 ? void 0 : _b.call(_a, origin, target)) {\n        interpolateFromNumber = interpolate([0, 100], [origin, target], {\n            clamp: false,\n        });\n        keyframes = [0, 100];\n    }\n    const animation = animator({\n        ...options,\n        duration,\n        keyframes,\n    });\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        }\n        else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\")\n                animation.flipTarget();\n        }\n        isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback)\n            delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            const state = animation.next(Math.max(0, elapsed));\n            latest = state.value;\n            if (interpolateFromNumber)\n                latest = interpolateFromNumber(latest);\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n        }\n        onUpdate && onUpdate(latest);\n        if (isComplete) {\n            if (repeatCount === 0) {\n                computedDuration =\n                    computedDuration !== undefined ? computedDuration : elapsed;\n            }\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            }\n            else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay && onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        stop: () => {\n            onStop && onStop();\n            driverControls.stop();\n        },\n        sample: (t) => {\n            return animation.next(Math.max(0, t));\n        },\n    };\n}\n\nexport { animate, hasRepeatDelayElapsed, loopElapsed, reverseElapsed };\n","function decay({ \n/**\n * The decay animation dynamically calculates an end of the animation\n * based on the initial keyframe, so we only need to define a single keyframe\n * as default.\n */\nkeyframes = [0], velocity = 0, power = 0.8, timeConstant = 350, restDelta = 0.5, modifyTarget, }) {\n    const origin = keyframes[0];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    return {\n        next: (t) => {\n            const delta = -amplitude * Math.exp(-t / timeConstant);\n            state.done = !(delta > restDelta || delta < -restDelta);\n            state.value = state.done ? target : target + delta;\n            return state;\n        },\n        flipTarget: () => { },\n    };\n}\n\nexport { decay };\n","function isWaapiSupportedEasing(easing) {\n    return (!easing || // Default easing\n        Array.isArray(easing) || // Bezier curve\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return Array.isArray(easing)\n        ? cubicBezierAsString(easing)\n        : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { sync } from '../../frameloop/index.mjs';\nimport { animate } from '../legacy-popmotion/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    let { keyframes, duration = 0.3, elapsed = 0, ease } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (options.type === \"spring\" || !isWaapiSupportedEasing(options.ease)) {\n        const sampleAnimation = animate(options);\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        let t = 0;\n        while (!state.done) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        delay: -elapsed,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n    });\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return () => {\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        const { currentTime } = animation;\n        if (currentTime) {\n            const sampleAnimation = animate(options);\n            value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n        }\n        sync.update(() => animation.cancel());\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    return element.animate({ [valueName]: keyframes, offset: times }, {\n        delay,\n        duration,\n        easing: mapEasingToNativeEasing(ease),\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","import { delay } from '../utils/delay.mjs';\n\nfunction createInstantAnimation({ keyframes, elapsed, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        return () => { };\n    };\n    return elapsed ? delay(setValue, -elapsed) : setValue();\n}\n\nexport { createInstantAnimation };\n","const underDampedSpring = () => ({\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n});\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst linearTween = () => ({\n    type: \"keyframes\",\n    ease: \"linear\",\n    duration: 0.3,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\nconst defaultTransitions = {\n    x: underDampedSpring,\n    y: underDampedSpring,\n    z: underDampedSpring,\n    rotate: underDampedSpring,\n    rotateX: underDampedSpring,\n    rotateY: underDampedSpring,\n    rotateZ: underDampedSpring,\n    scaleX: criticallyDampedSpring,\n    scaleY: criticallyDampedSpring,\n    scale: criticallyDampedSpring,\n    opacity: linearTween,\n    backgroundColor: linearTween,\n    color: linearTween,\n    default: criticallyDampedSpring,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else {\n        const factory = defaultTransitions[valueKey] || defaultTransitions.default;\n        return factory(keyframes[1]);\n    }\n};\n\nexport { criticallyDampedSpring, getDefaultTransition, linearTween, underDampedSpring };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { warning } from 'hey-listen';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from './waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from './create-instant-animation.mjs';\nimport { animate } from './legacy-popmotion/index.mjs';\nimport { inertia } from './legacy-popmotion/inertia.mjs';\nimport { getDefaultTransition } from './utils/default-transitions.mjs';\nimport { isAnimatable } from './utils/is-animatable.mjs';\nimport { getKeyframes } from './utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from './utils/transitions.mjs';\nimport { supports } from './waapi/supports.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\"opacity\"]);\nconst createMotionValueAnimation = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ...valueTransition,\n            elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        else if (valueTransition.type === \"inertia\") {\n            /**\n             * If this is an inertia animation, we currently don't support pre-generating\n             * keyframes for this as such it must always run on the main thread.\n             */\n            const animation = inertia(options);\n            return () => animation.stop();\n        }\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        const visualElement = value.owner;\n        const element = visualElement && visualElement.current;\n        const canAccelerateAnimation = supports.waapi() &&\n            acceleratedValues.has(valueName) &&\n            !options.repeatDelay &&\n            options.repeatType !== \"mirror\" &&\n            options.damping !== 0 &&\n            visualElement &&\n            element instanceof HTMLElement &&\n            !visualElement.getProps().onUpdate;\n        if (canAccelerateAnimation) {\n            /**\n             * If this animation is capable of being run via WAAPI, then do so.\n             */\n            return createAcceleratedAnimation(value, valueName, options);\n        }\n        else {\n            /**\n             * Otherwise, fall back to the main thread.\n             */\n            const animation = animate(options);\n            return () => animation.stop();\n        }\n    };\n};\n\nexport { createMotionValueAnimation };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        /**\n         * Ensure an initial wildcard keyframe is hydrated by the origin.\n         * TODO: Support extra wildcard keyframes i.e [1, null, 0]\n         */\n        if (target[0] === null) {\n            target[0] = origin;\n        }\n        return target;\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","import { animate } from './index.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nfunction inertia({ keyframes, velocity = 0, min, max, power = 0.8, timeConstant = 750, bounceStiffness = 500, bounceDamping = 10, restDelta = 1, modifyTarget, driver, onUpdate, onComplete, onStop, }) {\n    const origin = keyframes[0];\n    let currentAnimation;\n    function isOutOfBounds(v) {\n        return (min !== undefined && v < min) || (max !== undefined && v > max);\n    }\n    function findNearestBoundary(v) {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n        currentAnimation = animate({\n            keyframes: [0, 1],\n            velocity: 0,\n            ...options,\n            driver,\n            onUpdate: (v) => {\n                var _a;\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(v);\n                (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, v);\n            },\n            onComplete,\n            onStop,\n        });\n    }\n    function startSpring(options) {\n        startAnimation({\n            type: \"spring\",\n            stiffness: bounceStiffness,\n            damping: bounceDamping,\n            restDelta,\n            ...options,\n        });\n    }\n    if (isOutOfBounds(origin)) {\n        // Start the animation with spring if outside the defined boundaries\n        startSpring({\n            velocity,\n            keyframes: [origin, findNearestBoundary(origin)],\n        });\n    }\n    else {\n        /**\n         * Or if the value is out of bounds, simulate the inertia movement\n         * with the decay animation.\n         *\n         * Pre-calculate the target so we can detect if it's out-of-bounds.\n         * If it is, we want to check per frame when to switch to a spring\n         * animation\n         */\n        let target = power * velocity + origin;\n        if (typeof modifyTarget !== \"undefined\")\n            target = modifyTarget(target);\n        const boundary = findNearestBoundary(target);\n        const heading = boundary === min ? -1 : 1;\n        let prev;\n        let current;\n        const checkBoundary = (v) => {\n            prev = current;\n            current = v;\n            velocity = velocityPerSecond(v - prev, frameData.delta);\n            if ((heading === 1 && v > boundary) ||\n                (heading === -1 && v < boundary)) {\n                startSpring({ keyframes: [v, boundary], velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            keyframes: [origin, 0],\n            velocity,\n            timeConstant,\n            power,\n            restDelta,\n            modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined,\n        });\n    }\n    return {\n        stop: () => currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop(),\n    };\n}\n\nexport { inertia };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    // Replace with useId when released in React\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { isTouchEvent } from '../gestures/utils/event-type.mjs';\n\n/**\n * Filters out events not attached to the primary pointer (currently left mouse button)\n * @param eventHandler\n */\nfunction filterPrimaryPointer(eventHandler) {\n    return (event) => {\n        const isMouseEvent = event instanceof MouseEvent;\n        const isPrimaryPointer = !isMouseEvent ||\n            (isMouseEvent && event.button === 0);\n        if (isPrimaryPointer) {\n            eventHandler(event);\n        }\n    };\n}\nconst defaultPagePoint = { pageX: 0, pageY: 0 };\nfunction pointFromTouch(e, pointType = \"page\") {\n    const primaryTouch = e.touches[0] || e.changedTouches[0];\n    const point = primaryTouch || defaultPagePoint;\n    return {\n        x: point[pointType + \"X\"],\n        y: point[pointType + \"Y\"],\n    };\n}\nfunction pointFromMouse(point, pointType = \"page\") {\n    return {\n        x: point[pointType + \"X\"],\n        y: point[pointType + \"Y\"],\n    };\n}\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: isTouchEvent(event)\n            ? pointFromTouch(event, pointType)\n            : pointFromMouse(event, pointType),\n    };\n}\nconst wrapHandler = (handler, shouldFilterPrimaryPointer = false) => {\n    const listener = (event) => handler(event, extractEventInfo(event));\n    return shouldFilterPrimaryPointer\n        ? filterPrimaryPointer(listener)\n        : listener;\n};\n\nexport { extractEventInfo, wrapHandler };\n","import { useEffect } from 'react';\n\nfunction addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n/**\n * Attaches an event listener directly to the provided DOM element.\n *\n * Bypassing React's event system can be desirable, for instance when attaching non-passive\n * event handlers.\n *\n * ```jsx\n * const ref = useRef(null)\n *\n * useDomEvent(ref, 'wheel', onWheel, { passive: false })\n *\n * return <div ref={ref} />\n * ```\n *\n * @param ref - React.RefObject that's been provided to the element you want to bind the listener to.\n * @param eventName - Name of the event you want listen for.\n * @param handler - Function to fire when receiving the event.\n * @param options - Options to pass to `Event.addEventListener`.\n *\n * @public\n */\nfunction useDomEvent(ref, eventName, handler, options) {\n    useEffect(() => {\n        const element = ref.current;\n        if (handler && element) {\n            return addDomEvent(element, eventName, handler, options);\n        }\n    }, [ref, eventName, handler, options]);\n}\n\nexport { addDomEvent, useDomEvent };\n","import { isBrowser } from '../utils/is-browser.mjs';\n\n// We check for event support via functions in case they've been mocked by a testing suite.\nconst supportsPointerEvents = () => isBrowser && window.onpointerdown === null;\nconst supportsTouchEvents = () => isBrowser && window.ontouchstart === null;\nconst supportsMouseEvents = () => isBrowser && window.onmousedown === null;\n\nexport { supportsMouseEvents, supportsPointerEvents, supportsTouchEvents };\n","import { addDomEvent, useDomEvent } from './use-dom-event.mjs';\nimport { wrapHandler } from './event-info.mjs';\nimport { supportsPointerEvents, supportsTouchEvents, supportsMouseEvents } from './utils.mjs';\n\nconst mouseEventNames = {\n    pointerdown: \"mousedown\",\n    pointermove: \"mousemove\",\n    pointerup: \"mouseup\",\n    pointercancel: \"mousecancel\",\n    pointerover: \"mouseover\",\n    pointerout: \"mouseout\",\n    pointerenter: \"mouseenter\",\n    pointerleave: \"mouseleave\",\n};\nconst touchEventNames = {\n    pointerdown: \"touchstart\",\n    pointermove: \"touchmove\",\n    pointerup: \"touchend\",\n    pointercancel: \"touchcancel\",\n};\nfunction getPointerEventName(name) {\n    if (supportsPointerEvents()) {\n        return name;\n    }\n    else if (supportsTouchEvents()) {\n        return touchEventNames[name];\n    }\n    else if (supportsMouseEvents()) {\n        return mouseEventNames[name];\n    }\n    return name;\n}\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, getPointerEventName(eventName), wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\nfunction usePointerEvent(ref, eventName, handler, options) {\n    return useDomEvent(ref, getPointerEventName(eventName), handler && wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\n\nexport { addPointerEvent, usePointerEvent };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","function isMouseEvent(event) {\n    // PointerEvent inherits from MouseEvent so we can't use a straight instanceof check.\n    if (typeof PointerEvent !== \"undefined\" && event instanceof PointerEvent) {\n        return !!(event.pointerType === \"mouse\");\n    }\n    return event instanceof MouseEvent;\n}\nfunction isTouchEvent(event) {\n    const hasTouches = !!event.touches;\n    return hasTouches;\n}\n\nexport { isMouseEvent, isTouchEvent };\n","import { useEffect, useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { usePresence } from '../../components/AnimatePresence/use-presence.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { createAnimationState } from '../../render/utils/animation-state.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst animations = {\n    animation: makeRenderlessComponent(({ visualElement, animate }) => {\n        /**\n         * We dynamically generate the AnimationState manager as it contains a reference\n         * to the underlying animation library. We only want to load that if we load this,\n         * so people can optionally code split it out using the `m` component.\n         */\n        visualElement.animationState || (visualElement.animationState = createAnimationState(visualElement));\n        /**\n         * Subscribe any provided AnimationControls to the component's VisualElement\n         */\n        if (isAnimationControls(animate)) {\n            useEffect(() => animate.subscribe(visualElement), [animate]);\n        }\n    }),\n    exit: makeRenderlessComponent((props) => {\n        const { custom, visualElement } = props;\n        const [isPresent, safeToRemove] = usePresence();\n        const presenceContext = useContext(PresenceContext);\n        useEffect(() => {\n            visualElement.isPresent = isPresent;\n            const animation = visualElement.animationState &&\n                visualElement.animationState.setActive(AnimationType.Exit, !isPresent, {\n                    custom: (presenceContext && presenceContext.custom) ||\n                        custom,\n                });\n            if (animation && !isPresent) {\n                animation.then(safeToRemove);\n            }\n        }, [isPresent]);\n    }),\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { isMouseEvent, isTouchEvent } from './utils/event-type.mjs';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { sync, cancelSync } from '../frameloop/index.mjs';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { distance2D } from '../utils/distance.mjs';\nimport { frameData } from '../frameloop/data.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Because Safari doesn't trigger mouseup events when it's above a `<select>`\n            if (isMouseEvent(event) && event.buttons === 0) {\n                this.handlePointerUp(event, info);\n                return;\n            }\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (isTouchEvent(event) && event.touches.length > 1)\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","import { invariant } from 'hey-listen';\nimport { PanSession } from '../PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/use-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: AnyPointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        if (this.visualElement.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            var _a;\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                var _a, _b;\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const measuredAxis = (_b = (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout) === null || _b === void 0 ? void 0 : _b.layoutBox[axis];\n                    if (measuredAxis) {\n                        const length = calcLength(measuredAxis);\n                        current = length * (parseFloat(current) / 100);\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            onDragStart === null || onDragStart === void 0 ? void 0 : onDragStart(event, info);\n            (_a = this.visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Drag, true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock === null || onDirectionLock === void 0 ? void 0 : onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag === null || onDrag === void 0 ? void 0 : onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        onDragEnd === null || onDragEnd === void 0 ? void 0 : onDragEnd(event, info);\n    }\n    cancel() {\n        var _a, _b;\n        this.isDragging = false;\n        if (this.visualElement.projection) {\n            this.visualElement.projection.isAnimationBlocked = false;\n        }\n        (_a = this.panSession) === null || _a === void 0 ? void 0 : _a.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        (_b = this.visualElement.animationState) === null || _b === void 0 ? void 0 : _b.setActive(AnimationType.Drag, false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints === null || constraints === void 0 ? void 0 : constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(createMotionValueAnimation(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        var _a;\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const externalMotionValue = this.visualElement.getProps()[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, ((_a = this.visualElement.getProps().initial) === null || _a === void 0 ? void 0 : _a[axis]) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener === null || stopLayoutUpdateListener === void 0 ? void 0 : stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { useDrag } from '../../gestures/drag/use-drag.mjs';\nimport { usePanGesture } from '../../gestures/use-pan-gesture.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst drag = {\n    pan: makeRenderlessComponent(usePanGesture),\n    drag: makeRenderlessComponent(useDrag),\n};\n\nexport { drag };\n","import { useRef, useContext, useEffect } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { PanSession } from './PanSession.mjs';\n\n/**\n *\n * @param handlers -\n * @param ref -\n *\n * @privateRemarks\n * Currently this sets new pan gesture functions every render. The memo route has been explored\n * in the past but ultimately we're still creating new functions every render. An optimisation\n * to explore is creating the pan gestures and loading them into a `ref`.\n *\n * @internal\n */\nfunction usePanGesture({ onPan, onPanStart, onPanEnd, onPanSessionStart, visualElement, }) {\n    const hasPanEvents = onPan || onPanStart || onPanEnd || onPanSessionStart;\n    const panSession = useRef(null);\n    const { transformPagePoint } = useContext(MotionConfigContext);\n    const handlers = {\n        onSessionStart: onPanSessionStart,\n        onStart: onPanStart,\n        onMove: onPan,\n        onEnd: (event, info) => {\n            panSession.current = null;\n            onPanEnd && onPanEnd(event, info);\n        },\n    };\n    useEffect(() => {\n        if (panSession.current !== null) {\n            panSession.current.updateHandlers(handlers);\n        }\n    });\n    function onPointerDown(event) {\n        panSession.current = new PanSession(event, handlers, {\n            transformPagePoint,\n        });\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPanEvents && onPointerDown);\n    useUnmountEffect(() => panSession.current && panSession.current.end());\n}\n\nexport { usePanGesture };\n","import { useEffect } from 'react';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\n\n/**\n * A hook that allows an element to be dragged.\n *\n * @internal\n */\nfunction useDrag(props) {\n    const { dragControls: groupDragControls, visualElement } = props;\n    const dragControls = useConstant(() => new VisualElementDragControls(visualElement));\n    // If we've been provided a DragControls for manual control over the drag gesture,\n    // subscribe this component to it on mount.\n    useEffect(() => groupDragControls && groupDragControls.subscribe(dragControls), [dragControls, groupDragControls]);\n    // Apply the event listeners to the element\n    useEffect(() => dragControls.addListeners(), [dragControls]);\n}\n\nexport { useDrag };\n","import { isMouseEvent } from './utils/event-type.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\n\nfunction createHoverEvent(visualElement, isActive, callback) {\n    return (event, info) => {\n        if (!isMouseEvent(event) || isDragActive())\n            return;\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Hover, isActive);\n        }\n        callback && callback(event, info);\n    };\n}\nfunction useHoverGesture({ onHoverStart, onHoverEnd, whileHover, visualElement, }) {\n    usePointerEvent(visualElement, \"pointerenter\", onHoverStart || whileHover\n        ? createHoverEvent(visualElement, true, onHoverStart)\n        : undefined, { passive: !onHoverStart });\n    usePointerEvent(visualElement, \"pointerleave\", onHoverEnd || whileHover\n        ? createHoverEvent(visualElement, false, onHoverEnd)\n        : undefined, { passive: !onHoverEnd });\n}\n\nexport { useHoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { env } from '../../../utils/process.mjs';\nimport { useRef, useEffect } from 'react';\nimport { AnimationType } from '../../../render/utils/types.mjs';\nimport { warnOnce } from '../../../utils/warn-once.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nfunction useViewport({ visualElement, whileInView, onViewportEnter, onViewportLeave, viewport = {}, }) {\n    const state = useRef({\n        hasEnteredView: false,\n        isInView: false,\n    });\n    let shouldObserve = Boolean(whileInView || onViewportEnter || onViewportLeave);\n    if (viewport.once && state.current.hasEnteredView)\n        shouldObserve = false;\n    const useObserver = typeof IntersectionObserver === \"undefined\"\n        ? useMissingIntersectionObserver\n        : useIntersectionObserver;\n    useObserver(shouldObserve, state.current, visualElement, viewport);\n}\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nfunction useIntersectionObserver(shouldObserve, state, visualElement, { root, margin: rootMargin, amount = \"some\", once }) {\n    useEffect(() => {\n        if (!shouldObserve || !visualElement.current)\n            return;\n        const options = {\n            root: root === null || root === void 0 ? void 0 : root.current,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const intersectionCallback = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (state.isInView === isIntersecting)\n                return;\n            state.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && state.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                state.hasEnteredView = true;\n            }\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const props = visualElement.getProps();\n            const callback = isIntersecting\n                ? props.onViewportEnter\n                : props.onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(visualElement.current, options, intersectionCallback);\n    }, [shouldObserve, root, rootMargin, amount]);\n}\n/**\n * If IntersectionObserver is missing, we activate inView and fire onViewportEnter\n * on mount. This way, the page will be in the state the author expects users\n * to see it in for everyone.\n */\nfunction useMissingIntersectionObserver(shouldObserve, state, visualElement, { fallback = true }) {\n    useEffect(() => {\n        if (!shouldObserve || !fallback)\n            return;\n        if (env !== \"production\") {\n            warnOnce(false, \"IntersectionObserver not available on this device. whileInView animations will trigger on mount.\");\n        }\n        /**\n         * Fire this in an rAF because, at this point, the animation state\n         * won't have flushed for the first time and there's certain logic in\n         * there that behaves differently on the initial animation.\n         *\n         * This hook should be quite rarely called so setting this in an rAF\n         * is preferred to changing the behaviour of the animation state.\n         */\n        requestAnimationFrame(() => {\n            state.hasEnteredView = true;\n            const { onViewportEnter } = visualElement.getProps();\n            onViewportEnter && onViewportEnter(null);\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, true);\n            }\n        });\n    }, [shouldObserve]);\n}\n\nexport { useViewport };\n","import { useFocusGesture } from '../../gestures/use-focus-gesture.mjs';\nimport { useHoverGesture } from '../../gestures/use-hover-gesture.mjs';\nimport { useTapGesture } from '../../gestures/use-tap-gesture.mjs';\nimport { useViewport } from './viewport/use-viewport.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst gestureAnimations = {\n    inView: makeRenderlessComponent(useViewport),\n    tap: makeRenderlessComponent(useTapGesture),\n    focus: makeRenderlessComponent(useFocusGesture),\n    hover: makeRenderlessComponent(useHoverGesture),\n};\n\nexport { gestureAnimations };\n","import { useRef } from 'react';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { usePointerEvent, addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\n/**\n * @param handlers -\n * @internal\n */\nfunction useTapGesture({ onTap, onTapStart, onTapCancel, whileTap, visualElement, }) {\n    const hasPressListeners = onTap || onTapStart || onTapCancel || whileTap;\n    const isPressing = useRef(false);\n    const cancelPointerEndListeners = useRef(null);\n    /**\n     * Only set listener to passive if there are no external listeners.\n     */\n    const eventOptions = {\n        passive: !(onTapStart || onTap || onTapCancel || onPointerDown),\n    };\n    function removePointerEndListener() {\n        cancelPointerEndListeners.current && cancelPointerEndListeners.current();\n        cancelPointerEndListeners.current = null;\n    }\n    function checkPointerEnd() {\n        removePointerEndListener();\n        isPressing.current = false;\n        visualElement.animationState &&\n            visualElement.animationState.setActive(AnimationType.Tap, false);\n        return !isDragActive();\n    }\n    function onPointerUp(event, info) {\n        if (!checkPointerEnd())\n            return;\n        /**\n         * We only count this as a tap gesture if the event.target is the same\n         * as, or a child of, this component's element\n         */\n        !isNodeOrChild(visualElement.current, event.target)\n            ? onTapCancel && onTapCancel(event, info)\n            : onTap && onTap(event, info);\n    }\n    function onPointerCancel(event, info) {\n        if (!checkPointerEnd())\n            return;\n        onTapCancel && onTapCancel(event, info);\n    }\n    function onPointerDown(event, info) {\n        removePointerEndListener();\n        if (isPressing.current)\n            return;\n        isPressing.current = true;\n        cancelPointerEndListeners.current = pipe(addPointerEvent(window, \"pointerup\", onPointerUp, eventOptions), addPointerEvent(window, \"pointercancel\", onPointerCancel, eventOptions));\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        visualElement.animationState &&\n            visualElement.animationState.setActive(AnimationType.Tap, true);\n        onTapStart && onTapStart(event, info);\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPressListeners ? onPointerDown : undefined, eventOptions);\n    useUnmountEffect(removePointerEndListener);\n}\n\nexport { useTapGesture };\n","import { AnimationType } from '../render/utils/types.mjs';\nimport { useDomEvent } from '../events/use-dom-event.mjs';\n\n/**\n *\n * @param props\n * @param ref\n * @internal\n */\nfunction useFocusGesture({ whileFocus, visualElement, }) {\n    const { animationState } = visualElement;\n    const onFocus = () => {\n        animationState && animationState.setActive(AnimationType.Focus, true);\n    };\n    const onBlur = () => {\n        animationState && animationState.setActive(AnimationType.Focus, false);\n    };\n    useDomEvent(visualElement, \"focus\", whileFocus ? onFocus : undefined);\n    useDomEvent(visualElement, \"blur\", whileFocus ? onBlur : undefined);\n}\n\nexport { useFocusGesture };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { sync } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    var _a;\n                    if (!((_a = projection.getStack()) === null || _a === void 0 ? void 0 : _a.members.length)) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup === null || layoutGroup === void 0 ? void 0 : layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext === null || promoteContext === void 0 ? void 0 : promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove === null || safeToRemove === void 0 ? void 0 : safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { MeasureLayout } from './MeasureLayout.mjs';\n\nconst layoutFeatures = {\n    measureLayout: MeasureLayout,\n};\n\nexport { layoutFeatures };\n","const makeRenderlessComponent = (hook) => (props) => {\n    hook(props);\n    return null;\n};\n\nexport { makeRenderlessComponent };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    var _a, _b;\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        if (((_b = (_a = node.instance) === null || _a === void 0 ? void 0 : _a.style) === null || _b === void 0 ? void 0 : _b.display) === \"contents\")\n            continue;\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin === null || origin === void 0 ? void 0 : origin.originX);\n    calcAxisDelta(delta.y, source.y, target.y, origin === null || origin === void 0 ? void 0 : origin.originY);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox === null || originBox === void 0 ? void 0 : originBox.x, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.x);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox === null || originBox === void 0 ? void 0 : originBox.y, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.y);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        var _a;\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if ((_a = node.root) === null || _a === void 0 ? void 0 : _a.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            var _a, _b, _c, _d, _e;\n            (_b = (_a = node.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n            (_e = (_c = node.resumingFrom) === null || _c === void 0 ? void 0 : (_d = _c.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d);\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelSync, flushSync, sync } from '../../frameloop/index.mjs';\nimport { animate } from '../../animation/animate.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            this.isTransformDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this or any\n             * child might need recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager === null || subscriptionManager === void 0 ? void 0 : subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            var _a;\n            if (this.instance)\n                return;\n            this.isSVG =\n                instance instanceof SVGElement && instance.tagName !== \"svg\";\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            (_a = this.parent) === null || _a === void 0 ? void 0 : _a.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    var _a, _b, _c, _d, _e;\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = (_b = (_a = this.options.transition) !== null && _a !== void 0 ? _a : visualElement.getDefaultTransition()) !== null && _b !== void 0 ? _b : defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (((_c = this.resumeFrom) === null || _c === void 0 ? void 0 : _c.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        this.isLead() && ((_e = (_d = this.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d));\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            var _a, _b;\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.remove(this);\n            (_b = this.parent) === null || _b === void 0 ? void 0 : _b.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            var _a;\n            return (this.isAnimationBlocked ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            var _a;\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            (_a = this.nodes) === null || _a === void 0 ? void 0 : _a.forEach(resetRotation);\n            this.animationId++;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            var _a, _b, _c;\n            if (this.root.isUpdateBlocked()) {\n                (_b = (_a = this.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = (_c = this.options.visualElement) === null || _c === void 0 ? void 0 : _c.getProps().transformTemplate;\n            this.prevTransformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            var _a;\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout === null || prevLayout === void 0 ? void 0 : prevLayout.layoutBox);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            var _a;\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n            const transformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            var _a;\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, (_a = node.snapshot) === null || _a === void 0 ? void 0 : _a.layoutBox, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        /**\n         *\n         */\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.isProjectionDirty = true;\n            this.root.scheduleUpdateProjection();\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        /**\n         * Frame calculations\n         */\n        resolveTargetDelta() {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            if (!this.isProjectionDirty && !this.attemptToResolveRelativeTarget)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.target)) {\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues))\n                return undefined;\n            if ((this.parent.relativeTarget || this.parent.targetDelta) &&\n                this.parent.layout) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        calcProjection() {\n            var _a;\n            const { isProjectionDirty, isTransformDirty } = this;\n            this.isProjectionDirty = this.isTransformDirty = false;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            if (isProjectionDirty)\n                canSkip = false;\n            if (isShared && isTransformDirty)\n                canSkip = false;\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean(((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a, _b, _c;\n            (_b = (_a = this.options).scheduleRender) === null || _b === void 0 ? void 0 : _b.call(_a);\n            notifyAll && ((_c = this.getStack()) === null || _c === void 0 ? void 0 : _c.scheduleRender());\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            var _a, _b;\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.latestValues) || {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            this.relativeTarget = this.relativeTargetOrigin = undefined;\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const isSharedLayoutAnimation = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.source) !== ((_a = this.layout) === null || _a === void 0 ? void 0 : _a.source);\n            const isOnlyMember = (((_b = this.getStack()) === null || _b === void 0 ? void 0 : _b.members.length) || 0) <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            this.mixTargetDelta = (latest) => {\n                var _a;\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.layout)) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(0);\n        }\n        startAnimation(options) {\n            var _a, _b;\n            this.notifyListeners(\"animationStart\");\n            (_a = this.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop();\n            if (this.resumingFrom) {\n                (_b = this.resumingFrom.currentAnimation) === null || _b === void 0 ? void 0 : _b.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animate(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        var _a;\n                        this.mixTargetDelta(latest);\n                        (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, latest);\n                    },\n                    onComplete: () => {\n                        var _a;\n                        (_a = options.onComplete) === null || _a === void 0 ? void 0 : _a.call(options);\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            var _a;\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            var _a;\n            if (this.currentAnimation) {\n                (_a = this.mixTargetDelta) === null || _a === void 0 ? void 0 : _a.call(this, animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            var _a, _b, _c;\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            node.promote({\n                transition: (_a = node.options.initialPromotionConfig) === null || _a === void 0 ? void 0 : _a.transition,\n                preserveFollowOpacity: (_c = (_b = node.options.initialPromotionConfig) === null || _b === void 0 ? void 0 : _b.shouldPreserveFollowOpacity) === null || _c === void 0 ? void 0 : _c.call(_b, node),\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement === null || visualElement === void 0 ? void 0 : visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b, _c;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_c = (_b = valuesToRender.opacity) !== null && _b !== void 0 ? _b : this.latestValues.opacity) !== null && _c !== void 0 ? _c : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                const corrected = correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a, _b, _c;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        (_c = (_b = node.options).onExitComplete) === null || _c === void 0 ? void 0 : _c.call(_b);\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Propagate isProjectionDirty. Nodes are ordered by depth, so if the parent here\n     * is dirty we can simply pass this forward.\n     */\n    node.isProjectionDirty || (node.isProjectionDirty = Boolean(node.parent && node.parent.isProjectionDirty));\n    /**\n     * Propagate isTransformDirty.\n     */\n    node.isTransformDirty || (node.isTransformDirty = Boolean(node.parent && node.parent.isTransformDirty));\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement === null || visualElement === void 0 ? void 0 : visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { createMotionValueAnimation } from './index.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition = {}) {\n    const value = isMotionValue(from) ? from : motionValue(from);\n    value.start(createMotionValueAnimation(\"\", value, to, transition));\n    return {\n        stop: () => value.stop(),\n        isAnimating: () => value.isAnimating(),\n    };\n}\n\nexport { animate };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from 'hey-listen';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst setAndResetVelocity = (value, to) => {\n    // Looks odd but setting it twice doesn't render, it'll just\n    // set both prev and current to the latest value\n    value.set(to, false);\n    value.set(to);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nvar BoundingBoxDimension;\n(function (BoundingBoxDimension) {\n    BoundingBoxDimension[\"width\"] = \"width\";\n    BoundingBoxDimension[\"height\"] = \"height\";\n    BoundingBoxDimension[\"left\"] = \"left\";\n    BoundingBoxDimension[\"right\"] = \"right\";\n    BoundingBoxDimension[\"top\"] = \"top\";\n    BoundingBoxDimension[\"bottom\"] = \"bottom\";\n})(BoundingBoxDimension || (BoundingBoxDimension = {}));\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        setAndResetVelocity(value, origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                setAndResetVelocity(value, to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { BoundingBoxDimension, positionalValues, unitConversion };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\nimport { invariant } from 'hey-listen';\nimport { createElement } from 'react';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { env } from '../utils/process.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { variantPriorityOrder } from './utils/animation-state.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"Unmount\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Tracks whether this VisualElement's React component is currently present\n         * within the defined React tree.\n         */\n        this.isPresent = true;\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props) {\n        return {};\n    }\n    mount(instance) {\n        var _a;\n        this.current = instance;\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = (_a = this.parent) === null || _a === void 0 ? void 0 : _a.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (this.parent)\n            this.parent.children.add(this);\n        this.setProps(this.props);\n    }\n    unmount() {\n        var _a, _b, _c;\n        (_a = this.projection) === null || _a === void 0 ? void 0 : _a.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        (_b = this.removeFromVariantTree) === null || _b === void 0 ? void 0 : _b.call(this);\n        (_c = this.parent) === null || _c === void 0 ? void 0 : _c.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type)\n            return 0;\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures(renderedProps, isStrict, preloadedFeatures, projectionId, ProjectionNodeConstructor, initialLayoutGroupConfig) {\n        const features = [];\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (env !== \"production\" && preloadedFeatures && isStrict) {\n            invariant(false, \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\");\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Component } = featureDefinitions[name];\n            /**\n             * It might be possible in the future to use this moment to\n             * dynamically request functionality. In initial tests this\n             * was producing a lot of duplication amongst bundles.\n             */\n            if (isEnabled(renderedProps) && Component) {\n                features.push(createElement(Component, {\n                    key: name,\n                    ...renderedProps,\n                    visualElement: this,\n                }));\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n            });\n        }\n        return features;\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    setProps(props) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.props = props;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props), this.prevMotionValues);\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        var _a;\n        return (_a = this.props.variants) === null || _a === void 0 ? void 0 : _a[name];\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        var _a;\n        return this.isVariantNode ? this : (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getClosestVariantNode();\n    }\n    getVariantContext(startAtParent = false) {\n        var _a, _b;\n        if (startAtParent)\n            return (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getVariantContext();\n        if (!this.isControllingVariants) {\n            const context = ((_b = this.parent) === null || _b === void 0 ? void 0 : _b.getVariantContext()) || {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        var _a;\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            (_a = closestVariantNode.variantChildren) === null || _a === void 0 ? void 0 : _a.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (this.hasValue(key))\n            this.removeValue(key);\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n        this.bindToMotionValue(key, value);\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        var _a;\n        this.values.delete(key);\n        (_a = this.valueSubscriptions.get(key)) === null || _a === void 0 ? void 0 : _a();\n        this.valueSubscriptions.delete(key);\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    /**\n     * Get a motion value for this key. If called with a default\n     * value, we'll create one if none exists.\n     */\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        var _a;\n        (_a = this.events[eventName]) === null || _a === void 0 ? void 0 : _a.notify(...args);\n    }\n}\nconst variantProps = [\"initial\", ...variantPriorityOrder];\nconst numVariantProps = variantProps.length;\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"7.10.3\", `Attempting to mix Framer Motion versions ${nextValue.version} with 7.10.3 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        var _a;\n        return (_a = props.style) === null || _a === void 0 ? void 0 : _a[key];\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariable } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariable(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props) {\n        return scrapeMotionValuesFromProps(props);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        var _a;\n        if (transformProps.has(key)) {\n            return ((_a = getDefaultValueType(key)) === null || _a === void 0 ? void 0 : _a.default) || 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props) {\n        return scrapeMotionValuesFromProps(props);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { invariant } from 'hey-listen';\n\nfunction isCSSVariable(value) {\n    return typeof value === \"string\" && value.startsWith(\"var(--\");\n}\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariable(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariable(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariable(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd && transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    var _a;\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return (_a = defaultValueType.getAnimatableNone) === null || _a === void 0 ? void 0 : _a.call(defaultValueType, value);\n}\n\nexport { getAnimatableNone };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","const appearStoreId = (id, value) => `${id}: ${value}`;\n\nexport { appearStoreId };\n","import { sync } from '../../frameloop/index.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\nimport { appearStoreId } from './store-id.mjs';\n\nfunction handoffOptimizedAppearAnimation(id, name) {\n    const { MotionAppearAnimations } = window;\n    const animationId = appearStoreId(id, transformProps.has(name) ? \"transform\" : name);\n    const animation = MotionAppearAnimations && MotionAppearAnimations.get(animationId);\n    if (animation) {\n        /**\n         * We allow the animation to persist until the next frame:\n         *   1. So it continues to play until Framer Motion is ready to render\n         *      (avoiding a potential flash of the element's original state)\n         *   2. As all independent transforms share a single transform animation, stopping\n         *      it synchronously would prevent subsequent transforms from handing off.\n         */\n        sync.render(() => {\n            /**\n             * Animation.cancel() throws so it needs to be wrapped in a try/catch\n             */\n            try {\n                animation.cancel();\n                MotionAppearAnimations.delete(animationId);\n            }\n            catch (e) { }\n        });\n        return animation.currentTime || 0;\n    }\n    else {\n        return 0;\n    }\n}\n\nexport { handoffOptimizedAppearAnimation };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { setTarget } from './setters.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { handoffOptimizedAppearAnimation } from '../../animation/optimized-appear/handoff.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => animateTarget(visualElement, resolved, options)\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = ((_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.size)\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type && ((_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.getState()[type]);\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        let valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * Make animation instant if this is a transform prop and we should reduce motion.\n         */\n        if (visualElement.shouldReduceMotion && transformProps.has(key)) {\n            valueTransition = {\n                ...valueTransition,\n                type: false,\n                delay: 0,\n            };\n        }\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (!value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = handoffOptimizedAppearAnimation(appearId, key);\n            }\n        }\n        let animation = value.start(createMotionValueAnimation(key, value, valueTarget, valueTransition));\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation = animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(() => {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nexport { animateVisualElement, sortByTreeOrder, stopAnimation };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { animateVisualElement } from './animation.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { AnimationType } from './types.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\nconst variantPriorityOrder = [\n    AnimationType.Animate,\n    AnimationType.InView,\n    AnimationType.Focus,\n    AnimationType.Hover,\n    AnimationType.Tap,\n    AnimationType.Drag,\n    AnimationType.Exit,\n];\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        [AnimationType.Animate]: createTypeState(true),\n        [AnimationType.InView]: createTypeState(),\n        [AnimationType.Hover]: createTypeState(),\n        [AnimationType.Tap]: createTypeState(),\n        [AnimationType.Drag]: createTypeState(),\n        [AnimationType.Focus]: createTypeState(),\n        [AnimationType.Exit]: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState, variantPriorityOrder };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        var _a;\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => {\n            setVariants(child, variantLabels);\n        });\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    var _a;\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        origin[key] =\n            transitionOrigin !== undefined\n                ? transitionOrigin\n                : (_a = visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.get();\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","var AnimationType;\n(function (AnimationType) {\n    AnimationType[\"Animate\"] = \"animate\";\n    AnimationType[\"Hover\"] = \"whileHover\";\n    AnimationType[\"Tap\"] = \"whileTap\";\n    AnimationType[\"Drag\"] = \"whileDrag\";\n    AnimationType[\"Focus\"] = \"whileFocus\";\n    AnimationType[\"InView\"] = \"whileInView\";\n    AnimationType[\"Exit\"] = \"exit\";\n})(AnimationType || (AnimationType = {}));\n\nexport { AnimationType };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","const noop = (any) => any;\n\nexport { noop };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n\nexport { secondsToMilliseconds };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { frameData } from '../frameloop/data.mjs';\nimport { sync } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"7.10.3\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @privateRemarks\n     *\n     * We could look into a `useOnChange` hook if the above lifecycle management proves confusing.\n     *\n     * ```jsx\n     * useOnChange(x, () => {})\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect) {\n        this.passiveEffect = passiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(animation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.stopAnimation = animation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.stopAnimation) {\n            this.stopAnimation();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.stopAnimation;\n    }\n    clearAnimation() {\n        this.stopAnimation = null;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = \"${c}\";\nconst numberToken = \"${n}\";\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nfunction analyseComplexValue(v) {\n    if (typeof v === \"number\")\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    let numNumbers = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        // Strip colors from input so they're not picked up by number regex.\n        // There's a better way to combine these regex searches, but its beyond my regex skills\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        numNumbers = numbers.length;\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, numNumbers, tokenised: v };\n}\nfunction parse(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors\n                ? color.transform(v[i])\n                : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { analyseComplexValue, complex };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n"],"names":["warning","invariant","instantAnimationState","easeIn","p","easeOut","reverseEasing","easeInOut","mirrorEasing","hueToRgb","q","t","mixLinearColor","from","to","v","fromExpo","Math","sqrt","max","colorTypes","hex","rgba","hsla","asRGBA","color","type","find","test","Boolean","concat","model","parse","_ref","hue","saturation","lightness","alpha","red","green","blue","round","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","mix","transform","getMixer","origin","target","mixComplex","mixArray","output","numValues","length","blendValue","map","fromThis","i","mixObject","key","undefined","template","complex","createTransformer","originStats","analyseComplexValue","targetStats","numColors","numNumbers","pipe","values","mixNumber","createMixers","ease","customMixer","mixers","mixerFactory","Array","isArray","numMixers","mixer","easingFunction","push","interpolate","input","clamp","isClamp","arguments","inputLength","reverse","interpolator","progressInRange","progress","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","noop","getTForX","aX","x","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","backOut","backIn","backInOut","easingLookup","linear","circIn","circInOut","circOut","anticipate","pow","easingDefinitionToFunction","definition","x1","y1","x2","y2","keyframes","keyframeValues","times","duration","easingFunctions","isEasingArray","state","done","value","absoluteTimes","offset","o","convertOffsetToTimes","_value","defaultOffset","createInterpolator","easing","splice","next","flipTarget","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","bounce","velocity","mass","dampingRatio","undampedFreq","exponentialDecay","delta","a","b","calcAngularFreq","c","exp","d","e","f","g","initialGuess","result","rootIterations","approximateRoot","isNaN","stiffness","damping","durationKeys","physicsKeys","isSpringType","options","keys","some","spring","restSpeed","restDelta","isResolvedFromDuration","springOptions","derived","getSpringOptions","resolveSpring","zero","initialVelocity","createSpring","initialDelta","undampedAngularFreq","min","angularFreq","sin","cos","dampedAngularFreq","freqForT","sinh","cosh","current","currentVelocity","prevT","velocityPerSecond","isBelowVelocityThreshold","isBelowDisplacementThreshold","needsInterpolation","_t","types","decay","power","timeConstant","modifyTarget","amplitude","ideal","tween","loopElapsed","elapsed","framesync","update","passTimestamp","start","sync","stop","cancelSync","animate","_ref2","driver","repeat","repeatMax","repeatType","repeatDelay","autoplay","onPlay","onStop","onComplete","onRepeat","onUpdate","_a","_b","driverControls","latest","interpolateFromNumber","repeatCount","computedDuration","isComplete","isForwardPlayback","animator","call","animation","delay","reverseElapsed","hasRepeatDelayElapsed","sample","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","createAcceleratedAnimation","valueName","sampleAnimation","pregeneratedKeyframes","element","fill","iterations","direction","animateStyle","owner","onfinish","set","currentTime","setWithVelocity","cancel","createInstantAnimation","setValue","underDampedSpring","criticallyDampedSpring","linearTween","keyframesTransition","defaultTransitions","y","z","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scale","opacity","backgroundColor","default","getDefaultTransition","valueKey","isAnimatable","startsWith","featureTests","waapi","Object","hasOwnProperty","Element","prototype","results","supports","acceleratedValues","Set","createMotionValueAnimation","transition","valueTransition","getValueTransition","secondsToMilliseconds","isTargetAnimatable","get","getAnimatableNone","isZero","getZeroUnit","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","getVelocity","bounceStiffness","bounceDamping","currentAnimation","isOutOfBounds","findNearestBoundary","startAnimation","startSpring","boundary","heading","prev","checkBoundary","frameData","inertia","isTransitionDefined","visualElement","has","HTMLElement","getProps","when","_delay","delayChildren","staggerChildren","staggerDirection","parseFloat","indexOf","potentialUnitType","usePresence","context","useContext","PresenceContext","isPresent","onExitComplete","register","id","useId","useEffect","safeToRemove","acos","defaultPagePoint","pageX","pageY","pointFromTouch","pointType","point","touches","changedTouches","pointFromMouse","extractEventInfo","event","isTouchEvent","wrapHandler","handler","listener","eventHandler","isMouseEvent","MouseEvent","button","addDomEvent","eventName","passive","addEventListener","removeEventListener","useDomEvent","ref","supportsPointerEvents","isBrowser","window","onpointerdown","supportsTouchEvents","ontouchstart","supportsMouseEvents","onmousedown","mouseEventNames","pointerdown","pointermove","pointerup","pointercancel","pointerover","pointerout","pointerenter","pointerleave","touchEventNames","getPointerEventName","name","addPointerEvent","usePointerEvent","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","drag","openHorizontal","openVertical","isDragActive","openGestureLock","PointerEvent","pointerType","animations","makeRenderlessComponent","animationState","createAnimationState","isAnimationControls","subscribe","exit","props","custom","presenceContext","setActive","AnimationType","Exit","then","distance","PanSession","constructor","handlers","transformPagePoint","this","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","timestamp","onStart","onMove","handlePointerMove","transformPoint","buttons","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","time","Infinity","calcRelativeAxisConstraints","axis","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","elementDragControls","WeakMap","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","originPoint","constraints","hasMutatedConstraints","elastic","createBox","originEvent","snapToCursor","panSession","stopAnimation","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","eachAxis","getAxisMotionValue","percent","measuredAxis","layout","layoutBox","calcLength","Drag","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","render","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","isRefObject","resolveRefConstraints","top","left","bottom","right","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","measurePageBox","root","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","convertBoundingBoxToBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","Promise","all","dragKey","toUpperCase","externalMotionValue","getValue","initial","scalePositionWithinConstraints","boxProgress","source","sourceLength","targetLength","calcOrigin","transformTemplate","style","updateScroll","updateLayout","addListeners","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","motionValue","translate","pan","onPan","onPanStart","onPanEnd","onPanSessionStart","hasPanEvents","useRef","MotionConfigContext","useUnmountEffect","dragControls","groupDragControls","useConstant","createHoverEvent","isActive","callback","Hover","isNodeOrChild","parent","child","parentElement","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","forEach","observeIntersection","rootInteresectionObserver","lookupRoot","document","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","delete","unobserve","thresholdNames","useIntersectionObserver","shouldObserve","margin","rootMargin","amount","once","threshold","isIntersecting","isInView","hasEnteredView","InView","onViewportEnter","onViewportLeave","useMissingIntersectionObserver","_ref3","fallback","env","warnOnce","requestAnimationFrame","gestureAnimations","inView","whileInView","viewport","tap","onTap","onTapStart","onTapCancel","whileTap","hasPressListeners","isPressing","cancelPointerEndListeners","eventOptions","onPointerDown","removePointerEndListener","checkPointerEnd","Tap","onPointerUp","onPointerCancel","focus","whileFocus","onFocus","Focus","onBlur","hover","onHoverStart","onHoverEnd","whileHover","pixelsToPercent","pixels","correctBorderRadius","correct","node","px","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","includes","cssVariables","replace","cssVariableRegex","match","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","React__default","componentDidMount","layoutGroup","switchLayoutGroup","layoutId","addScaleCorrector","defaultScaleCorrectors","group","add","didUpdate","setOptions","globalProjectionState","hasEverUpdated","getSnapshotBeforeUpdate","prevProps","layoutDependency","willUpdate","promote","relegate","postRender","getStack","members","componentDidUpdate","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","borderRadius","applyTo","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","boxShadow","layoutFeatures","measureLayout","LayoutGroupContext","SwitchLayoutGroupContext","hook","transformBoxPoints","topLeft","bottomRight","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","applyTreeDeltas","treePath","isSharedTransition","treeLength","instance","display","layoutScroll","scroll","transformBox","hasTransform","latestValues","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","isNear","maxDistance","calcAxisDelta","calcBoxDelta","originX","originY","calcRelativeAxis","relative","calcRelativeBox","calcRelativeAxisPosition","calcRelativePosition","createDelta","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","addUniqueItem","scheduleRender","removeItem","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","_c","_d","_e","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","children","isDirty","sort","transformAxes","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","elementId","animationId","isTreeAnimating","isTransformDirty","isProjectionDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","Map","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","SubscriptionManager","notifyListeners","subscriptionManager","_len","args","_key","notify","hasListeners","mount","SVGElement","tagName","cancelDelay","resizeUnblockUpdate","hasAnimatedSinceResize","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","setAnimationOrigin","animationOptions","shouldReduceMotion","unmount","preRender","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","size","mountNodeEarly","clear","resetTransformStyle","notifyLayoutUpdate","flushSync","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","measureViewportBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","hasScale","setTargetDelta","targetDelta","getLead","attemptToResolveRelativeTarget","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","has2DTranslate","isShared","canSkip","pendingAnimation","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","isMotionValue","isAnimating","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","stack","getPrevLead","hasRotate","resetValues","setStaticValue","getProjectionStyles","styleProp","styles","visibility","pointerEvents","resolveMotionValue","emptyStyles","valuesToRender","transformOrigin","scaleCorrectors","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","searchNode","querySelector","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","rootProjectionNode","HTMLProjectionNode","documentNode","getComputedStyle","position","isIdentityScale","is2DTranslate","getBoundingClientRect","viewportBox","positionalKeys","isPositionalKey","setAndResetVelocity","isNumOrPxType","number","BoundingBoxDimension","getPosFromMatrix","matrix","pos","split","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","transformPropOrder","filter","positionalValues","width","paddingLeft","paddingRight","height","_ref4","_ref5","paddingTop","paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","checkAndConvertChangedValueTypes","transitionEnd","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","hasValue","fromType","findDimensionValueType","toType","isKeyframesTarget","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","scrollY","pageYOffset","convertedTarget","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","targetBbox","_ref12","scrollTo","unitConversion","hasPositionalKey","prefersReducedMotion","hasReducedMotionListener","featureNames","featureDefinitions","numFeatures","propEventHandlers","VisualElement","reducedMotionConfig","visualState","isVariantNode","isControllingVariants","valueSubscriptions","prevMotionValues","events","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderState","baseTarget","initialValues","variantChildren","manuallyAnimateOnMount","willChange","initialMotionValues","scrapeMotionValuesFromProps","isWillChangeMotionValue","_props","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","matches","addListener","initPrefersReducedMotion","setProps","valueIsTransform","transformProps","removeOnChange","on","latestValue","removeOnRenderRequest","sortNodePosition","other","sortInstanceNodePosition","loadFeatures","renderedProps","isStrict","preloadedFeatures","projectionId","ProjectionNodeConstructor","initialLayoutGroupConfig","features","isEnabled","Component","createElement","build","measureInstanceViewportBox","getStaticValue","makeTargetAnimatable","canMutate","makeTargetAnimatableFromInstance","nextValue","prevValue","addValue","existingValue","hasAnimated","removeValue","updateMotionValuesFromProps","getVariant","variants","getClosestVariantNode","getVariantContext","numVariantProps","variantProps","prop","isVariantLabel","closestVariantNode","removeValueFromRenderState","defaultValue","readValue","readValueFromInstance","setBaseTarget","getBaseTarget","valueFromInitial","resolveVariantFromProps","getBaseTargetFromProps","variantPriorityOrder","DOMVisualElement","compareDocumentPosition","vars","isMounted","transformValues","getOrigin","checkTargetForNewValues","parsed","parseDomVariant","resolved","resolveCSSVariables","HTMLVisualElement","defaultType","getDefaultValueType","computedStyle","isCSSVariable","getPropertyValue","trim","buildHTMLStyles","renderHTML","SVGVisualElement","super","isSVGTag","camelCaseAttributes","camelToDash","getAttribute","buildSVGAttrs","renderSVG","createDomVisualElement","isSVGComponent","enableHardwareAcceleration","maxDepth","getVariableValue","token","exec","parseCSSVariable","defaultValueType","defaultValueTypes","numberValueTypes","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","dimensionValueTypes","degrees","vw","vh","testValueType","shallowCompare","prevLength","appearStoreId","handoffOptimizedAppearAnimation","MotionAppearAnimations","optimizedAppearDataAttribute","animateVariant","variant","resolveVariant","transitionOverride","getAnimation","animateTarget","resolve","getChildAnimations","forwardDelay","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","animateChildren","first","last","animationTypeState","getState","valueTarget","shouldBlockAnimation","appearId","setTarget","protectedKeys","needsAnimating","shouldBlock","Animate","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createTypeState","isInitialRender","buildResolvedTypeValues","acc","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","reduce","prevResolvedValues","allKeys","markToAnimate","blockInitialAnimation","fallbackAnimation","fallbackTarget","shouldAnimate","setAnimateFunction","makeAnimator","getCurrent","isNumericalString","isZeroValueString","valueTypes","findValueType","setMotionValue","resolveFinalValueInKeyframes","newValueKeys","numNewValues","targetValue","getOriginFromTransition","transitionOrigin","arr","item","index","timeout","performance","now","checkElapsed","read","any","combineFunctions","transformers","toFromDifference","subscriptions","numSubscriptions","getSize","seconds","frameDuration","MotionValue","init","_this","version","lastUpdated","canTrackVelocity","updateAndNotify","scheduleVelocityCheck","change","velocityChange","renderRequest","velocityCheck","onChange","subscription","clearListeners","eventManagers","attach","passiveEffect","getPrevious","animationStart","animationComplete","clearAnimation","animationCancel","destroy","isColorString","r","substring","parseInt","splitColor","alpha$1","sanitize","isString","rgbUnit","clampRgbUnit","testProp","singleColorRegex","aName","bName","cName","floatRegex","maxDefaults","applyDefaultFilter","slice","unit","functionRegex","functions","join","colorToken","numberToken","colors","colorRegex","numbers","tokenised","convertNumbersToZero","transformer"],"sourceRoot":""}