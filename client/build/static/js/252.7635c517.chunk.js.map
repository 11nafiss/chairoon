{"version":3,"file":"static/js/252.7635c517.chunk.js","mappings":"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","sources":["components/shared/BodyBox.js","components/shared/ContainerMid.js","components/shared/DividerLine.js","components/shared/GridBox.js","components/shared/ScrollBox.js","components/shared/button/ButtonText.js","components/shared/stack/StackBody.js","components/shared/stack/StackCol.js","components/shared/stack/StackRow.js","components/shared/text/TextThin.js","components/shared/text/TextTitle.js","components/shared/wrapper/BoxScape.js","pages/user/profile/View.js"],"sourcesContent":["import { Box } from \"@mui/material\";\r\nimport { styled } from \"@mui/material/styles\";\r\n\r\nconst BodyBox = styled(Box)(({ theme }) => ({\r\n  flexGrow: 1,\r\n  height: \"90dvh\",\r\n  width: \"100%\",\r\n}));\r\n\r\nexport default BodyBox;\r\n","import { Container } from \"@mui/material\";\r\nimport { styled } from \"@mui/material/styles\";\r\n\r\nconst ContainerMid = styled(Container)(({ theme }) => ({\r\n  height: \"inherit\",\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"center\"\r\n}));\r\n\r\nexport default ContainerMid;\r\n","import { Divider } from \"@mui/material\";\r\nimport { styled } from \"@mui/material/styles\";\r\n\r\nconst DividerLine = styled(Divider)(({ theme }) => ({\r\n  marginBottom: \"20px\",\r\n  width: \"100%\",\r\n  border: \"1px solid #f7bd00\",\r\n}));\r\n\r\nexport default DividerLine;\r\n","import { Box } from \"@mui/material\";\r\nimport { styled } from \"@mui/material/styles\";\r\n\r\nconst GridBox = styled(Box)(({ theme }) => ({\r\n  width: \"100%\",\r\n  display: \"grid\",\r\n  gridTemplateColumns: \"repeat(12, minmax(0, 1fr))\",\r\n}));\r\n\r\nexport default GridBox;\r\n","import { Box } from \"@mui/material\";\r\nimport { styled } from \"@mui/material/styles\";\r\n\r\nconst ScrollBox = styled(Box)(({ theme }) => ({\r\n  overflowY: \"scroll\",\r\n  height: \"100%\",\r\n  width: \"100%\",\r\n}));\r\n\r\nexport default ScrollBox;","import { Button } from \"@mui/material\";\r\nimport { styled } from \"@mui/material/styles\";\r\n\r\nconst ButtonText = styled(Button)(({ theme }) => ({\r\n  width: \"100%\",\r\n  backgroundColor: \"#f7bd00\",\r\n  color: \"#252525\",\r\n  \"&:hover\": {\r\n    backgroundColor: \"#d3d4de\",\r\n  },\r\n  gridColumn: \"span 4\",\r\n  height: \"40px\",\r\n}));\r\n\r\nexport default ButtonText;\r\n","import { Stack } from \"@mui/material\";\r\nimport { styled } from \"@mui/material/styles\";\r\n\r\nconst StackBody = styled(Stack)(({ theme }) => ({\r\n  height: \"95%\",\r\n  width: \"inherit\",\r\n  justifyContent: \"center\",\r\n  flexDirection: \"row\",\r\n}));\r\n\r\nexport default StackBody;\r\n","import { Stack } from \"@mui/material\";\r\nimport { styled } from \"@mui/material/styles\";\r\n\r\nconst StackCol = styled(Stack)(({ theme }) => ({\r\n  width: \"100%\",\r\n  height: \"100%\",\r\n  flexDirection: \"column\",\r\n}));\r\n\r\nexport default StackCol;\r\n","import { Stack } from \"@mui/material\";\r\nimport { styled } from \"@mui/material/styles\";\r\n\r\nconst StackRow = styled(Stack)(({ theme }) => ({\r\n  width: \"100%\",\r\n  flexDirection: \"row\",\r\n}));\r\n\r\nexport default StackRow;\r\n","import { Typography } from \"@mui/material\";\r\nimport { styled } from \"@mui/material/styles\";\r\n\r\nconst TextThin = styled(Typography)(({ theme }) => ({\r\n  fontSize: \"14px\",\r\n  \"&:first-letter\": {\r\n    textTransform: \"capitalize\",\r\n  }\r\n}));\r\n\r\nexport default TextThin;\r\n","import { Typography } from \"@mui/material\";\r\nimport { styled } from \"@mui/material/styles\";\r\n\r\nconst TextTitle = styled(Typography)(({ theme }) => ({\r\n  fontSize: \"20px\",\r\n  fontWeight: 600,\r\n  \"&:first-letter\": {\r\n    textTransform: \"capitalize\",\r\n  }\r\n}));\r\n\r\nexport default TextTitle;\r\n","import { Box } from \"@mui/material\";\r\nimport { styled } from \"@mui/material/styles\";\r\n\r\nconst BoxScape = styled(Box)(({ theme }) => ({\r\n  backgroundColor: \"#fff\",\r\n  borderRadius: \"25px\",\r\n  width: \"100%\",\r\n  height: \"100%\",\r\n  overflow: \"hidden\",\r\n  padding: \"20px\",\r\n}));\r\n\r\nexport default BoxScape;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport BodyBox from \"../../../components/shared/BodyBox\";\r\nimport ContainerMid from \"../../../components/shared/ContainerMid\";\r\nimport StackBody from \"../../../components/shared/stack/StackBody\";\r\nimport BoxScape from \"../../../components/shared/wrapper/BoxScape\";\r\nimport TextTitle from \"../../../components/shared/text/TextTitle\";\r\nimport StackCol from \"../../../components/shared/stack/StackCol\";\r\nimport StackRow from \"../../../components/shared/stack/StackRow\";\r\nimport { Avatar, Box } from \"@mui/material\";\r\nimport ButtonText from \"../../../components/shared/button/ButtonText\";\r\nimport ScrollBox from \"../../../components/shared/ScrollBox\";\r\nimport GridBox from \"../../../components/shared/GridBox\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport html2canvas from \"html2canvas\";\r\nimport { jsPDF } from \"jspdf\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { FetchUserProfile } from \"../../../redux/slices/app\";\r\nimport TextBody from \"../../../components/shared/text/TextBody\";\r\nimport dayjs from \"dayjs\";\r\nimport DividerLine from \"../../../components/shared/DividerLine\";\r\nimport { CLIENT_URL } from \"../../../config\";\r\nimport TextThin from \"../../../components/shared/text/TextThin\";\r\n\r\nconst PageResume = () => {\r\n  const inputRef = useRef(null);\r\n  const { username } = useParams();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(FetchUserProfile(username));\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const { user } = useSelector((state) => state.app);\r\n\r\n  const printDocument = () => {\r\n    html2canvas(inputRef.current, { useCORS: true }).then((canvas) => {\r\n      let img = new Image();\r\n      img.src = canvas.toDataURL(\"image/png\");\r\n      img.onload = () => {\r\n        const pdf = new jsPDF(\"p\", \"mm\", \"a4\", true);\r\n        const imgProps = pdf.getImageProperties(img);\r\n        let pdfWidth = pdf.internal.pageSize.getWidth();\r\n        let imgHeight = pdf.internal.pageSize.getHeight();\r\n        let pdfHeight = (imgProps.height * pdfWidth) / imgProps.width;\r\n        pdf.addImage(img, \"PNG\", 0, 0, pdfWidth, pdfHeight);\r\n        if (pdfHeight >= imgHeight) {\r\n          pdf.addPage();\r\n          pdfHeight = 0; // Restart height position\r\n          pdf.addImage(img, \"PNG\", 0, 0, pdfWidth, pdfHeight);\r\n        }\r\n        pdf.save(`${user.username}_resume.pdf`);\r\n      };\r\n    });\r\n  };\r\n\r\n  return (\r\n    <BodyBox>\r\n      <ContainerMid maxWidth=\"md\">\r\n        <StackBody gap={3}>\r\n          <BoxScape>\r\n            <StackCol gap={2}>\r\n              <StackRow sx={{ alignItems: \"center\" }}>\r\n                <TextTitle>Profile Resume</TextTitle>\r\n                <Box sx={{ flexGrow: 1 }} />\r\n                <ButtonText onClick={printDocument} sx={{ width: \"100px\" }}>\r\n                  Download\r\n                </ButtonText>\r\n              </StackRow>\r\n              <ScrollBox\r\n                sx={{\r\n                  borderWidth: \"2px 0px 0px 0px\",\r\n                  borderStyle: \"solid\",\r\n                  borderColor: \"#252525\",\r\n                }}\r\n              >\r\n                <GridBox id=\"divToPrint\" ref={inputRef} gap={2} sx={{ padding: \"30px\" }}>\r\n                  <Box sx={{ gridColumn: \"span 2\", gridRow: \"span 1\" }}>\r\n                    <Avatar\r\n                      alt={user?.username}\r\n                      src={user?.avatar}\r\n                      sx={{\r\n                        width: 100,\r\n                        height: 100,\r\n                      }}\r\n                    />\r\n                  </Box>\r\n                  <Box sx={{ gridColumn: \"span 10\" }}>\r\n                    <StackCol gap={1} sx={{ justifyContent: \"center\" }}>\r\n                      <TextTitle>{`${user.firstName} ${user.lastName}`}</TextTitle>\r\n                      <StackRow gap={1} sx={{ alignItems: \"center\" }}>\r\n                        <TextThin\r\n                          sx={{\r\n                            \"&:first-letter\": {\r\n                              textTransform: \"lowercase\",\r\n                            },\r\n                          }}\r\n                        >{`${user.email}`}</TextThin>\r\n                        {user.phoneNumber !== undefined && (\r\n                          <>\r\n                            <TextBody>{\"|\"}</TextBody>\r\n                            <TextThin>{`${user.phoneNumber}`}</TextThin>\r\n                          </>\r\n                        )}\r\n                        {user.socialmedias.length !== 0 && (\r\n                          <>\r\n                            <TextBody>{\"|\"}</TextBody>\r\n                            <TextThin>{`Chairoon: `}</TextThin>\r\n                            <Link to={`${CLIENT_URL}/ch/${user.username}`}>\r\n                              <TextThin\r\n                                sx={{\r\n                                  \"&:first-letter\": {\r\n                                    textTransform: \"lowercase\",\r\n                                  },\r\n                                }}\r\n                              >{`@${user.username}`}</TextThin>\r\n                            </Link>\r\n                          </>\r\n                        )}\r\n                        {user.profileWeb.length !== 0 && (\r\n                          <>\r\n                            <TextBody>{\"|\"}</TextBody>\r\n                            <TextThin>{`Web: `}</TextThin>\r\n                            {user.profileWeb.map((value) => (\r\n                              <Link to={`${value.linkUrl}`}>\r\n                                <TextThin>{`${value.linkName}`}</TextThin>\r\n                              </Link>\r\n                            ))}\r\n                          </>\r\n                        )}\r\n                      </StackRow>\r\n                      <StackRow gap={1} sx={{ alignItems: \"center\" }}>\r\n                        {user.city !== undefined && (\r\n                          <>\r\n                            <TextThin>{`${user.city}, `}</TextThin>\r\n                          </>\r\n                        )}\r\n                        {user.country !== undefined && (\r\n                          <>\r\n                            <TextThin>{`${user.country}`}</TextThin>\r\n                          </>\r\n                        )}\r\n                        {user.birthday !== undefined && (\r\n                          <>\r\n                            <TextBody>{\"|\"}</TextBody>\r\n                            <TextThin>{`${dayjs(user.birthday).format(\r\n                              \"ddd, DD MMM YYYY\"\r\n                            )}`}</TextThin>\r\n                          </>\r\n                        )}\r\n                        {user.gender !== undefined && user.gender !== \"secret\" && (\r\n                          <>\r\n                            <TextBody>{\"|\"}</TextBody>\r\n                            <TextThin>{`${user.gender}`}</TextThin>\r\n                          </>\r\n                        )}\r\n                        {user.religion !== undefined && user.religion !== \"secret\" && (\r\n                          <>\r\n                            <TextBody>{\"|\"}</TextBody>\r\n                            <TextThin>{`${user.religion}`}</TextThin>\r\n                          </>\r\n                        )}\r\n                      </StackRow>\r\n                    </StackCol>\r\n                  </Box>\r\n                  <Box sx={{ gridColumn: \"span 12\" }}>\r\n                    <DividerLine sx={{ mb: \"0px\" }} />\r\n                  </Box>\r\n                  <Box sx={{ gridColumn: \"span 12\" }}>\r\n                    <StackCol gap={1}>\r\n                      <TextTitle>About Me</TextTitle>\r\n                      <Box sx={{ ml: \"20px\" }}>\r\n                        <TextThin>{user.about}</TextThin>\r\n                      </Box>\r\n                    </StackCol>\r\n                  </Box>\r\n                </GridBox>\r\n              </ScrollBox>\r\n            </StackCol>\r\n          </BoxScape>\r\n        </StackBody>\r\n      </ContainerMid>\r\n    </BodyBox>\r\n  );\r\n};\r\n\r\nexport default PageResume;\r\n"],"names":["styled","Box","_ref","theme","flexGrow","height","width","Container","display","alignItems","justifyContent","Divider","marginBottom","border","gridTemplateColumns","overflowY","Button","backgroundColor","color","gridColumn","Stack","flexDirection","Typography","fontSize","textTransform","fontWeight","borderRadius","overflow","padding","PageResume","inputRef","useRef","username","useParams","dispatch","useDispatch","useEffect","FetchUserProfile","user","useSelector","state","app","_jsx","BodyBox","children","ContainerMid","maxWidth","StackBody","gap","BoxScape","_jsxs","StackCol","StackRow","sx","TextTitle","ButtonText","onClick","printDocument","html2canvas","current","useCORS","then","canvas","img","Image","src","toDataURL","onload","pdf","jsPDF","imgProps","getImageProperties","pdfWidth","internal","pageSize","getWidth","imgHeight","getHeight","pdfHeight","addImage","addPage","save","concat","ScrollBox","borderWidth","borderStyle","borderColor","GridBox","id","ref","gridRow","Avatar","alt","avatar","firstName","lastName","TextThin","email","undefined","phoneNumber","_Fragment","TextBody","socialmedias","length","Link","to","CLIENT_URL","profileWeb","map","value","linkUrl","linkName","city","country","birthday","dayjs","format","gender","religion","DividerLine","mb","ml","about"],"sourceRoot":""}